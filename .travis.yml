dist: bionic
language: scala

services:
  - docker

scala:
  - 0.24.0-bin-20200324-6cd3a9d-NIGHTLY

before_install: curl -Ls https://git.io/jabba | bash && . ~/.jabba/jabba.sh
install:
  # akka build on jdk > 8 require JDK 8 installation
  - |
    if [[ "$TRAVIS_JDK" != 'adopt@~1.8.0-0' ]]; then
      jabba install adopt@~1.8.0-0
    fi
  - jabba install "$TRAVIS_JDK" && jabba use "$_" && java -Xmx32m -version

addons:
  apt:
    packages:
    - graphviz

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.cache/coursier
    - $HOME/.ivy2/cache
    - $HOME/.sbt
    - $HOME/.jabba/jdk

# script for the default 'test' stage:
# dotty ready modules:
#  + actor/compile (no test code)
#  + actor-typed/{compile, CompileJdk9/compile} (no test code)
#  + slf4j/test
#  + actor-testkit/test
#  + actor-testkit-typed/test
#  + actor-tests/test
#  + actor-typed-tests/test
script:
  - |
    if [[ "$TRAVIS_SCALA_VERSION" == 2.* ]]; then
      sbt -jvm-opts .jvmopts-travis -Dakka.build.scalaVersion=$TRAVIS_SCALA_VERSION ";update ;mimaReportBinaryIssues ;test:compile ;validateCompile ;headerCheckAll"
    else
      sbt -jvm-opts .jvmopts-travis -Dakka.build.scalaVersion=$TRAVIS_SCALA_VERSION ";akka-slf4j/test ;akka-actor-tests/test ;akka-actor-typed-tests/test"
    fi

jobs:
  include:
    - stage: whitesource
      name: whitesource
      script: git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH" && sbt whitesourceCheckPolicies whitesourceUpdate

stages:
  - name: whitesource
    if: repo = akka/akka AND ((branch = master AND type != pull_request) OR tag =~ ^v) AND env(TRAVIS_SCALA_VERSION) =~ ^2.12
  - name: test
    if: type == pull_request OR NOT tag =~ ^v

env:
  jobs:
    - TRAVIS_JDK="adopt@~1.8.0-0"
    - TRAVIS_JDK="adopt@~1.11.0-0"
    - TRAVIS_JDK="graalvm@~20.0.0"
  global:
    # encrypt with: travis encrypt WHITESOURCE_PASSWORD=...
    - secure: "BCWtUqKG7trI7n5OZE2ReCGXQE/f5P8kXpfcpa5DXJeautBnpH/jettY5ermB5JLl12CisG6S4nS3BSKP4Uf8WPpPeSq402CZYTCbUxMWCvS+9N+kEQrHU7iwYqHQBL/RMy6eIyWPRD+JqxKuvlgfNuSEry9pMagwW7mNQrZgYU="
